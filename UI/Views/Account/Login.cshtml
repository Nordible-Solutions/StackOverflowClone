@model UI.Models.LoginViewModel
@{
    TempData["Title"] = "Sign in";
}

@if (TempData["RedirectMsg"] != null)
{   
    <div class="VH-centered">
        <div class="alert alert-info">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <p class="" style="text-align:center;"> @Html.Raw(TempData["RedirectMsg"]) </p>
        </div>
    </div>
}

<!--http://stackoverflow.com/questions/778607/returnUrl-in-asp-net-mvc-->

<h2></h2>
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { returnUrl = ViewContext.HttpContext.Request.Url.PathAndQuery }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4> </h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.TextBoxFor(m => m.UserName, new { @placeholder = "eg: yourname", @class = "form-control" })
                        @Html.LabelFor(m => m.UserName, new { @class = "casual" })
                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @placeholder = "eg: $ecret@123", @class = "form-control" })
                        @Html.LabelFor(m => m.Password, new { @class = "casual" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe, new { @class = "casual" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <!--class was removed col-md-offset-2 -->
                        <input type="submit" value="Sign in" class="btn btn-default" />
                    </div>
                </div>
            }

            <p>
                @Html.ActionLink("I don't have an account", "Register")
            </p>
            <!-- TODO: Enable this once you have account confirmation enabled for password reset functionality -->
            <p>
                @Html.ActionLink("Password lost?", "ForgotPassword")
            </p>

        </section>
    </div>
    <div class="col-md-4">
        @*TODO: enable this
    <section id="socialLoginForm">
        <hr />

        <h4> Sign in with </h4>

        @Html.Partial("~/Views/Account/_ExternalLoginsListPartial.cshtml", new UI.Models.ExternalLoginListViewModel { returnUrl = ViewBag.returnUrl })
    </section>*@
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

