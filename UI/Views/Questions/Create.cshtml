@model UI.Models.QAModel

@{
    TempData["Title"] = "Ask question";
}

@if (TempData["Guideline"] != null)
{
    <div class="VH-centered">
        <div class="alert alert-info">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <p class="" style="text-align:center;"> @Html.Raw(TempData["Guideline"]) </p>
        </div>
    </div>
}

<link rel="stylesheet" href="~/Content/mdStyles/mdMain.css" />
<script type="text/javascript" src="~/Scripts/mdScripts/Markdown.Converter.js"></script>
<script type="text/javascript" src="~/Scripts/mdScripts/Markdown.Sanitizer.js"></script>
<script type="text/javascript" src="~/Scripts/mdScripts/Markdown.Editor.js"></script>

@using (Html.BeginForm("Create", "Questions", FormMethod.Post))
{

    <div class="form-group">

        @Html.AntiForgeryToken()
        <div class="row">

            <hr />
            <div class="col-md-2"></div>
            <div class="col-md-7">
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.question.Q_Title, new { @placeholder = "My question", @class = "wideInput form-control" })
                        @Html.LabelFor(model => model.question.Q_Title, new { @class = "casual" })
                        @Html.ValidationMessageFor(model => model.question.Q_Title, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3"></div>
        </div>


        <div class="row">

            <div class="col-md-12">

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @*Html.LabelFor(model => model.Q_Wiki, htmlAttributes: new { @class = "control-label col-md-2" })*@

                    <div class="row">

                        <div class="col-md-1"></div>

                        <div class="col-md-10">

                            @Html.LabelFor(model => model.question.Q_Wiki, new { @class = "casual" })
                            <div class="wmd-panel">
                                <div>
                                    <div id="wmd-button-bar"></div>
                                    
                                    <textarea class="wmd-input form-control" cols="90" data-val="true" data-val-required="* Describe your question" id="wmd-input" name="question.Q_Wiki" placeholder="Question description" rows="15">
Use above buttons for adding links, headings, lists, quotes and more.
                                    </textarea>
                                    @*Html.TextAreaFor(model => model.question.Q_Wiki, new { @placeholder = "Question description", @class = "wmd-input form-control", @id = "wmd-input", @name = "mas", @cols = "90", @rows = "15" })*@
                                    @Html.ValidationMessageFor(model => model.question.Q_Wiki)
                                </div>
                                <div id="wmd-preview" class="wmd-preview">
                                </div>
                            </div>

                        </div>

                        <!--TODO: Remove this - it is needed to test MathJax $\sin^2 \theta$-->
                        <div class="col-md-1"></div>

                    </div>

                </div>
            </div>
        </div>


        <div class="row">

            <div class="col-md-2"></div>

            <div class="col-md-7">

                <div class="form-group">
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.question.Q_Fields, new { id = "fields", placeholder = "eg: maths, geometry, pythagorus", @class = "form-control wideInput" })
                        @Html.LabelFor(model => model.question.Q_Fields, new { @class = "casual text-danger" })
                        @Html.ValidationMessageFor(model => model.question.Q_Fields, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        <!--class was removed col-md-offset-2 -->
                        <input type="submit" value="Ask question" class="btn btn-default" />
                    </div>
                </div>

            </div>

            <div class="col-md-3"></div>

        </div>


    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    (function () {
        var converter1 = Markdown.getSanitizingConverter();

        converter1.hooks.chain("preBlockGamut", function (text, rbg) {
            return text.replace(/^ {0,3}""" *\n((?:.*?\n)+?) {0,3}""" *$/gm, function (whole, inner) {
                return "<blockquote>" + rbg(inner) + "</blockquote>\n";
            });
        });

        var editor1 = new Markdown.Editor(converter1);

        editor1.run();
    })();
</script>